admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 7701 }

static_resources:
  listeners:
  - name: listener1
    address:
      socket_address: { address: 0.0.0.0, port_value: 7700 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:

              # API requests to the LLM (they all start with /v1)
              - match: 
                  prefix: "/v1"
                route:
                  cluster: app
                  # Disable timeout for SSE
                  # https://medium.com/@kaitmore/server-sent-events-http-2-and-envoy-6927c70368bb
                  timeout: 0s 
                typed_per_filter_config:
                  # Switch off authentication
                  #envoy.filters.http.oauth2:
                  #  "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                  #  disabled: true
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true

              # These are requests coming from the front end typescript
              - match: 
                  prefix: "/completions"
                route:
                  cluster: app
                  # Disable timeout for SSE
                  # https://medium.com/@kaitmore/server-sent-events-http-2-and-envoy-6927c70368bb
                  timeout: 0s 

              # Images JS, and CSS don't need auth.
              - match: { prefix: "/static" }
                route: { cluster: app }
                typed_per_filter_config:
                  #envoy.filters.http.oauth2:
                  #  "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                  #  config: {}
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true
                    
              # The setup_application root, ideally new users land here
              - match: { prefix: "/" }
                route: 
                  cluster: app
                  timeout: 60s
     
          http_filters:

          - name: envoy.filters.http.oauth2
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
              config:
                token_endpoint:
                  cluster: keycloak
                  uri: keycloak:7710/realms/bionic-gpt/protocol/openid-connect/token
                  timeout: 3s
                authorization_endpoint: http://localhost:7710/realms/bionic-gpt/protocol/openid-connect/auth
                redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
                redirect_path_matcher:
                  path:
                    exact: /callback
                signout_path:
                  path:
                    exact: /auth/sign_out
                forward_bearer_token: true    
                credentials:
                  client_id: bionic-gpt
                  token_secret:
                    name: token
                    sds_config:
                      path: "/etc/envoy/token-secret.yaml"
                  hmac_secret:
                    name: hmac
                    sds_config:
                      path: "/etc/envoy/hmac-secret.yaml"
                # (Optional): defaults to 'user' scope if not provided
                auth_scopes:
                - openid
                - email
                - roles

          # Detect Sign In and Sign Out
          # Add our authentication_handler as the place to redirect to
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              default_source_code:
                inline_string:
                  function envoy_on_response(response_handle)

                    local headers = response_handle:headers()
                    if headers:get(":status") == "302" then
                      local location = headers:get("location")
                      if string.find(location, "http://localhost:7710") then
                        response_handle:logInfo("REDIRECT TO KEYCLOAK DETECTED")
                      else
                        local cookie = headers:get("set-cookie")

                        if cookie ~= nil then
                          if string.find(cookie, "OauthHMAC=") then
                            if string.find(cookie, "OauthHMAC=deleted") then
                              response_handle:logInfo("LOGOUT detected")
                            else
                              response_handle:logInfo("SIGNIN / SIGNUP detected")
                              headers:remove("location")
                              headers:add("location", "http://localhost:7700/authentication_handler")
                            end
                          end
                        end
                      end
                    end
                  end

          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: keycloak
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: keycloak
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: keycloak
                port_value: 7710

  # The web application
  - name: app
    connect_timeout: 1.25s
    type: strict_dns
    lb_policy: round_robin
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: app
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: development
                port_value: 7703