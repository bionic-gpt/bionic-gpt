version: '3.4'
services:

  db:
    image: ankane/pgvector:v0.5.1
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vscode"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Configure Authn Proxy to listen on port 9090 and reverse proxy nginx on port 80.
  barricade:
    image: purtontech/barricade:1.2.9
    environment:
        # This secret key is used to encrypt cookies.
        SECRET_KEY: 190a5bf4b3cbb6c0991967ab1c48ab30790af876720f1835cbbf3820f4f5d949
        DATABASE_URL: postgresql://postgres:testpassword@db:5432/postgres?sslmode=disable
        FORWARD_URL: development
        FORWARD_PORT: 7703
        # Any requests that meet the following regular expressions
        # with pass through. i.e. They don't require auth.
        SKIP_AUTH_FOR: /static*,/v1
        REDIRECT_URL: '/'
        USER_TABLE_NAME: 'barricade_users'
        MAX_PAYLOAD_SIZE: 4000000
    ports:
      - "7700:9090"
    depends_on:
      db:
        condition: service_healthy

  development:
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      - ..:/workspace:cached
      - target:/workspace/target/ # Set target as a volume for performance. 

    environment:
      RUST_LOG: debug
      DATABASE_URL: postgresql://postgres:testpassword@db:5432/postgres?sslmode=disable
      APP_DATABASE_URL: postgresql://bionic_application:testpassword@db:5432/postgres?sslmode=disable
      SIGNOUT_URL: /auth/sign_out
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    working_dir: /workspace
    
    depends_on:
      - db

volumes:
  target:
  node_modules: