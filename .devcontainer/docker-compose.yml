version: '3.4'
services:

  llm-api:
    image: ghcr.io/bionic-gpt/llama-3-8b-chat:1.1.3
    platform: linux/amd64

  embeddings-api:
    image: ghcr.io/bionic-gpt/bionicgpt-embeddings-api:cpu-0.6
    platform: linux/amd64

  chunking-engine:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:4ffd8bc

  db:
    image: ankane/pgvector:v0.5.1
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vscode"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Handles routing between our containers
  envoy:
    build: 
      context: .
      dockerfile: Dockerfile.envoy
    ports:
      - "7700:7700"
      - "7701:7701"

  # Configure Authn Proxy to listen on port 9090 and reverse proxy nginx on port 80.
  barricade:
    image: purtontech/barricade:1.2.10
    environment:
        # This secret key is used to encrypt cookies.
        SECRET_KEY: 190a5bf4b3cbb6c0991967ab1c48ab30790af876720f1835cbbf3820f4f5d949
        DATABASE_URL: postgresql://postgres:testpassword@db:5432/postgres?sslmode=disable
        REDIRECT_URL: /app/post_registration
        USER_TABLE_NAME: 'barricade_users'
    depends_on:
      db:
        condition: service_healthy

  # Integration testing using a headless chrome browser
  selenium:
    image: selenium/standalone-chrome:4
    shm_size: 2gb
    environment:
      VNC_NO_PASSWORD: 1
    ports:
      # VNC
      - 7705:5900
      # No VNC
      - 7706:7900
    volumes:
      # So that we can load examples with the browser testing.
      # However it doesn't seem to work with earthly, you have to docker cp the files
      - ../crates/integration-testing/files:/workspace

  # MailHog is an email testing tool for developers.
  smtp:
    image: mailhog/mailhog

  development:
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      - ..:/workspace:cached
      - target:/workspace/target/ # Set target as a volume for performance. 

    environment:
      RUST_LOG: debug
      ENABLE_BARRICADE: 1
      DATABASE_URL: postgresql://postgres:testpassword@db:5432/postgres?sslmode=disable
      APP_DATABASE_URL: postgresql://bionic_application:testpassword@db:5432/postgres?sslmode=disable
      SIGNOUT_URL: /auth/sign_out

      INVITE_DOMAIN: http://envoy:7700
      INVITE_FROM_EMAIL_ADDRESS: support@application.com
      SMTP_HOST: smtp
      SMTP_PORT: 1025
      SMTP_USERNAME: thisisnotused
      SMTP_PASSWORD: thisisnotused
      SMTP_TLS_OFF: 'true'
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    working_dir: /workspace
    
    depends_on:
      - db

volumes:
  target:
  node_modules: