-- migrate:up

-- Automations table
CREATE TABLE automations (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    prompt_id INT NOT NULL REFERENCES prompts(id),
    name TEXT NOT NULL,
    description TEXT,
    team_id INT REFERENCES teams(id) ON DELETE CASCADE,
    created_by INT REFERENCES users(id),
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);

-- Automation run executions
CREATE TABLE automation_runs (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    automation_id INT NOT NULL REFERENCES automations(id) ON DELETE CASCADE,
    status automation_run_status NOT NULL DEFAULT 'Pending',
    started_at TIMESTAMPTZ,
    completed_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT now()
);

-- Cron-based automation triggers
CREATE TABLE automation_cron_triggers (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    automation_id INT NOT NULL REFERENCES automations(id) ON DELETE CASCADE,
    cron_expression TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT now()
);

-- Webhook-based automation triggers
CREATE TABLE automation_webhook_triggers (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    automation_id INT NOT NULL REFERENCES automations(id) ON DELETE CASCADE,
    secret TEXT NOT NULL,
    created_at TIMESTAMPTZ DEFAULT now()
);

-- Link chats to automation runs
ALTER TABLE chats ADD COLUMN automation_run_id INT REFERENCES automation_runs(id);


-- migrate:down

-- Remove column first to break dependencies
ALTER TABLE chats DROP COLUMN IF EXISTS automation_run_id;

-- Drop tables in reverse dependency order
DROP TABLE IF EXISTS automation_webhook_triggers;
DROP TABLE IF EXISTS automation_cron_triggers;
DROP TABLE IF EXISTS automation_runs;
DROP TABLE IF EXISTS automations;