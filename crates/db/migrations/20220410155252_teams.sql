-- migrate:up

CREATE TABLE teams (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    name VARCHAR,
    created_by_user_id INT NOT NULL
);

COMMENT ON TABLE teams IS 'An team is created for everyone that signs up. It could also have been called teams.';
COMMENT ON COLUMN teams.name IS 'The name of the team i.e. Microsoft or perhaps a persons name';
COMMENT ON COLUMN teams.created_by_user_id IS 'The action committed. i.e. deleting a secret etc.';

CREATE TABLE team_users (
    user_id INT NOT NULL, 
    team_id INT NOT NULL,
    roles role ARRAY NOT NULL,
    PRIMARY KEY (user_id, team_id)
);

COMMENT ON TABLE team_users IS 'A User can belong to multiple teams (teams).';
COMMENT ON COLUMN team_users.roles IS 'The RBAC privelages the user has for this team.';

CREATE TABLE invitations (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    team_id INT NOT NULL, 
    email VARCHAR NOT NULL,
    first_name VARCHAR NOT NULL,
    last_name VARCHAR NOT NULL,
    roles role ARRAY NOT NULL,
    invitation_selector VARCHAR NOT NULL,
    invitation_verifier_hash VARCHAR NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_team
        FOREIGN KEY(team_id) 
        REFERENCES teams(id)
);

COMMENT ON TABLE invitations IS 'Invitations are generated so users can join teams (teams)';
COMMENT ON COLUMN invitations.team_id IS 'The team that the user will join if they acccept the invite';
COMMENT ON COLUMN invitations.roles IS 'The RBAC privelages the user will receive on joining the team (team).';
COMMENT ON COLUMN invitations.invitation_selector IS 'To avoid timing attacks the inviation secret is split into a lookup then a verfication.';
COMMENT ON COLUMN invitations.email IS 'After we lookup the invite we check that the hash is correct';

-- Give access to the application user, the application user has no access to 
-- The sessions table and therefore cannot fake a login.
GRANT SELECT, INSERT ON team_users TO ft_application;
GRANT SELECT, INSERT, UPDATE ON teams TO ft_application;
GRANT SELECT, INSERT, DELETE ON invitations TO ft_application;
GRANT USAGE, SELECT ON invitations_id_seq, teams_id_seq TO ft_application;

-- Give access to the readonly user
GRANT SELECT ON invitations, teams, team_users TO ft_readonly;
GRANT SELECT ON invitations_id_seq, teams_id_seq TO ft_readonly;

-- migrate:down
DROP TABLE team_users;
DROP TABLE invitations;
DROP TABLE teams;