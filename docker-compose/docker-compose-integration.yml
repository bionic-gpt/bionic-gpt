services:

  app:
    environment:
      LOGOUT_URL: http://keycloak:7810/realms/bionic-gpt/protocol/openid-connect/logout
      INVITE_DOMAIN: http://oauth2-proxy:7800
      INVITE_FROM_EMAIL_ADDRESS: support@application.com
      SMTP_HOST: smtp
      SMTP_PORT: 1025
      SMTP_USERNAME: thisisnotused
      SMTP_PASSWORD: thisisnotused
      SMTP_TLS_OFF: 'true'

  oauth2-proxy:
    environment:
      OAUTH2_PROXY_REDIRECT_URL: http://oauth2-proxy:7800/oauth2/callback
      OAUTH2_PROXY_WHITELIST_DOMAINS: "keycloak:7810"
      
  keycloak:
    command:
      - "start-dev"
      - "--import-realm"
      - "--http-port=7810"
      - "--proxy=edge"
      - "--hostname=keycloak:7810"

  postgres:
    ports:
      - "5432:5432"
      
  # Integration testing using a headless chrome browser
  selenium:
    image: selenium/standalone-chrome:4
    shm_size: 2gb
    environment:
      VNC_NO_PASSWORD: 1
    ports:
      # VNC
      - 7725:5900
    volumes:
      # So that we can load examples with the browser testing.
      # However it doesn't seem to work with earthly, you have to docker cp the files
      - ../.devcontainer/datasets:/workspace

  video:
    image: selenium/video:ffmpeg-6.0-20231102
    environment:
      DISPLAY_CONTAINER_NAME: selenium
      FILE_NAME: chrome-video.mp4
    volumes:
      - ./tmp:/videos
    ## Wait until everything is up before we start recording
    depends_on:
      keycloak:
        condition: service_healthy

  # MailHog is an email testing tool for developers.
  smtp:
    image: mailhog/mailhog
  
  # Mock out the slow big stuff
  unstructured:
    image: alexliesenfeld/httpmock:latest
    volumes:
      - ./.devcontainer/mocks:/mocks
    entrypoint: httpmock
    command: --expose -m /mocks -p 8000
    ports:
      - "8000:8000"
      
  llm-api:
    image: alexliesenfeld/httpmock:latest
    volumes:
      - ./.devcontainer/mocks:/mocks
    entrypoint: httpmock
    command: --expose -m /mocks -p 3000
    ports:
      - "3000:3000"

  embeddings-api:
    image: alexliesenfeld/httpmock:latest
    volumes:
      - ./.devcontainer/mocks:/mocks
    entrypoint: httpmock
    command: --expose -m /mocks -p 8080
    ports:
      - "8080:8080"