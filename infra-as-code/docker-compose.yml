# Do not expose this configuration to the internet. This is an
# example configuration so that you can try out Bionic GPT.
#
# This is NOT a production configuration.
services:

  llm-api:
    image: ghcr.io/bionic-gpt/llama-3-8b-chat:1.1.1
    platform: linux/amd64

  embeddings-api:
    image: ghcr.io/bionic-gpt/bionicgpt-embeddings-api:cpu-0.6
    platform: linux/amd64

  # Document parsing, OCR and chunking.
  chunking-engine:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:4ffd8bc
    platform: linux/amd64

  # Postgres pre-loaded with pgVector
  # To connect outside docker `docker compose exec postgres psql -U postgres`
  postgres:
    image: ankane/pgvector
    platform: linux/amd64
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_USER: postgres
      POSTGRES_DB: keycloak
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Handles routing between our containers
  envoy:
    image: ghcr.io/bionic-gpt/bionicgpt-envoy:1.7.30
    ports:
      - "3000:7700"

  # Configure Authn Proxy to listen on port 9090 and reverse proxy nginx on port 80.
  barricade:
    image: purtontech/barricade:1.2.10
    environment:
        # This secret key is used to encrypt cookies.
        SECRET_KEY: 190a5bf4b3cbb6c0991967ab1c48ab30790af876720f1835cbbf3820f4f5d949
        DATABASE_URL: postgresql://postgres:testpassword@postgres:5432/bionic-gpt?sslmode=disable
        REDIRECT_URL: /app/post_registration
        USER_TABLE_NAME: 'barricade_users'
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  # Sets up our database tables
  migrations:
    image: ghcr.io/bionic-gpt/bionicgpt-db-migrations:1.7.30
    platform: linux/amd64
    environment:
      DATABASE_URL: postgresql://postgres:testpassword@postgres:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
  
  # Parses documents into chunks and creates embeddings.
  pipeline-job:
    image: ghcr.io/bionic-gpt/bionicgpt-pipeline-job:1.7.30
    platform: linux/amd64
    environment:
      APP_DATABASE_URL: postgresql://bionic_application:testpassword@postgres:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
  
  # Our axum server delivering our user interface
  app:
    image: ghcr.io/bionic-gpt/bionicgpt:1.7.30
    platform: linux/amd64
    environment:
      SIGNOUT_URL: /auth/sign_out
      ENABLE_BARRICADE: 1
      APP_DATABASE_URL: postgresql://bionic_application:testpassword@postgres:5432/bionic-gpt?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully